name: CICD-artifact

on:
  push:
    branches: [ "main" ]
    
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/springboot-starter

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Chekcout
      uses: actions/checkout@v3
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
        cache: 'maven'
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: upload build binary file
      uses: actions/upload-artifact@v3
      with:
        name: build-binary
        path: target
      
  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Get verion
      id: image
      run: |
        VERSION=$(echo ${{ github.sha }} | cut -c1-8)
        echo VERSION=$VERSION
        echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV
    
    - name: download build binary file
      uses: actions/download-artifact@v3
      with:
        name: build-binary
        path: ~/download/target
    
    - name: Display structure of downloaded files
      run: |
        ls -al
        ls -al /
        pwd
      
    - name: Login to GitHub Packages Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Build & Push to GitHub Packages
      uses: docker/build-push-action@v3
      with:
        push: true
        file: ./Dockerfile-artifact
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          
  #target 환경생성 되면 아래 수정하여 사용
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
      - name: ArgoCD Helm Chart update
        run: |
          echo "add below for ArgoCD Helm Chart update"
          #git config --global user.email "actions@github.com"
          #git config --global user.name "GitHub Actions"

  #   - name: Check out k8s repo
  #     uses: actions/checkout@master
  #     with:
  #       repository: your/gitops-repository
  #       token: ${{ secrets.GIT_ACCESS_TOKEN }}

  #   - name: chmod repo destination
  #     run: |
  #       chmod +x $DESTINATION
  #       ls

  #   - name: git push image tag to k8 repo 
  #     env:
  #       GITHUB_REPO: ${{ github.repository.name }}
  #       GITHUB_SHA: ${{ github.sha }}
  #     run: |
  #       sed -i -e 's@${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:.*@${{ steps.build-image.outputs.image }}@g' $DESTINATION/resources.yaml
  #       git add .
  #       git commit -m "$COMMIT_MSG"
  #       git push -f --set-upstream origin main     
